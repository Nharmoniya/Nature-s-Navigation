{"version":3,"sources":["main.js"],"names":["$siteList","$","$lastLi","find","x","localStorage","getItem","xObject","JSON","parse","hashMap","url","link","render","remove","forEach","node","index","$li","insertBefore","on","window","open","e","stopPropagation","splice","prompt","urlName","console","log","indexOf","push","logoType","onbeforeunload","string","stringify","setItem","document","key","i","length","toLowerCase"],"mappings":"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","file":"main.1f19ae8e.js","sourceRoot":"..","sourcesContent":["const $siteList = $(\".siteList\");\r\nconst $lastLi = $siteList.find(\"li.last\");\r\n//注意从getItem中拿出x时要加单引号，因为x此时是数组\r\nconst x = localStorage.getItem('x')//把变成字符串名为x的hashmap从localStorage中拿出来\r\nconst xObject = JSON.parse(x)//将hashmap重新变为对象\r\n//将hashmap等于xObject ||(或者) 等于存入的数组\r\nconst hashMap = xObject || [\r\n  {\r\n    \r\n    url: \"https://developer.mozilla.org/zh-CN/\",\r\n    link: \"MDN\"\r\n  },\r\n  { \r\n    url: \"https://caniuse.com/\",\r\n    link: \"Caniuse\"\r\n  },\r\n];\r\n\r\nconst render= ()=>{\r\n  $siteList.find('li:not(.last)').remove()//把之前的li都找到除了最后一个，然后删除\r\n  hashMap.forEach((node,index) => {\r\n    const $li = $(`<li>\r\n      <div class=\"site\">\r\n        <div class=\"logo\">${node.link[0]}</div>\r\n        <div class=\"link\">${node.link}</div>\r\n        <div class=\"close\">\r\n        <svg class=\"icon\" aria-hidden=\"true\">\r\n          <use xlink:href=\"#icon-add\"></use>\r\n        </svg>\r\n      </div>\r\n      </div>\r\n  </li>`).insertBefore($lastLi);\r\n  $li.on('click',()=>{\r\n    window.open(node.url)\r\n  })\r\n  $li.on('click','.close',(e)=>{\r\n    e.stopPropagation();//为了阻止点击X跳转，阻止冒泡\r\n    hashMap.splice(index, 1)\r\n    render();\r\n  })\r\n  })\r\n}\r\n//调用render\r\nrender();\r\n\r\n$(\".addButton\").on(\"click\", () => {\r\n  let url = window.prompt(\"请问你要添加的网址是啥？\");\r\n  let urlName = window.prompt(\"请问你要添加的网址名称\");\r\n  console.log(url);\r\n  if (url.indexOf(\"http\") != 0) {\r\n    url = \"https://\" + url;\r\n  }\r\n  console.log(url);\r\n  hashMap.push({\r\n    url:url,\r\n    link:urlName,\r\n    logoType:'text',\r\n  })\r\n  //调用render\r\n   render();\r\n});\r\n\r\n//监听用户关闭浏览器的API\r\nwindow.onbeforeunload = ()=>{\r\n  const string = JSON.stringify(hashMap)//把对象变成字符串\r\n  localStorage.setItem('x',string)//把变成字符串的hashmap存入localStorage中名为x\r\n}\r\n\r\n//监听键盘\r\n$(document).on('keypress', (e) => {\r\n  const key =e.key\r\n  console.log(key)\r\n  for(let i=0;i<hashMap.length;i++){\r\n    if(hashMap[i].link[0].toLowerCase() === key){\r\n      window.open(hashMap[i].url)\r\n    }\r\n  }\r\n})"]}